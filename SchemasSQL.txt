-- Table: public.UserType

-- DROP TABLE public."UserType";

CREATE TABLE public."UserType"
(
    key integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "UserType_pkey" PRIMARY KEY (key)
)

TABLESPACE pg_default;

ALTER TABLE public."UserType"
    OWNER to postgres;

-- Table: public.User

-- DROP TABLE public."User";

CREATE TABLE public."User"
(
    email character(255) COLLATE pg_catalog."default" NOT NULL,
    key integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character(255) COLLATE pg_catalog."default" NOT NULL,
    password character(255) COLLATE pg_catalog."default" NOT NULL,
    type integer NOT NULL,
    CONSTRAINT "User_pkey" PRIMARY KEY (key),
    CONSTRAINT "frk.userType" FOREIGN KEY (type)
        REFERENCES public."UserType" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public."User"
    OWNER to postgres;

-- Table: public.Course

-- DROP TABLE public."Course";

CREATE TABLE public."Course"
(
    key integer NOT NULL,
    grade integer NOT NULL,
    name character(255) NOT NULL,
    CONSTRAINT Course_pkey PRIMARY KEY (key)
)

TABLESPACE pg_default;

ALTER TABLE public."Course"
    OWNER to postgres;

-- Table: public.Discipline

-- DROP TABLE public."Discipline";

CREATE TABLE public."Discipline"
(
    key integer NOT NULL,
    name character(255) NOT NULL,
    course integer NOT NULL,
    year integer NOT NULL,
    CONSTRAINT "Discipline_pkey" PRIMARY KEY (key),
    CONSTRAINT fk_discipline_course FOREIGN KEY (course)
        REFERENCES public."Course" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE public."Discipline"
    OWNER to postgres;

-- Table: public.DeckType

-- DROP TABLE public."DeckType";

CREATE TABLE public."DeckType"
(
    key integer NOT NULL,
    name character(255) NOT NULL,
    CONSTRAINT "DeckType_pkey" PRIMARY KEY (key)
)

TABLESPACE pg_default;

ALTER TABLE public."DeckType"
    OWNER to postgres;

-- Table: public.DisciplineUser

-- DROP TABLE public."DisciplineUser";

CREATE TABLE public."DisciplineUser"
(
    key integer NOT NULL,
    discipline integer NOT NULL,
    "user" integer NOT NULL,
    CONSTRAINT "DisciplineUser_pkey" PRIMARY KEY (key),
    CONSTRAINT fk_discipline FOREIGN KEY (discipline)
        REFERENCES public."Discipline" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_user FOREIGN KEY ("user")
        REFERENCES public."User" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public."DisciplineUser"
    OWNER to postgres;

-- Table: public.AnswerType

-- DROP TABLE public."AnswerType";

CREATE TABLE public."AnswerType"
(
    key integer NOT NULL,
    name character(255) NOT NULL,
    CONSTRAINT "AnswerType_pkey" PRIMARY KEY (key)
)

TABLESPACE pg_default;

ALTER TABLE public."AnswerType"
    OWNER to postgres;

-- Table: public.Deck

-- DROP TABLE public."Deck";

CREATE TABLE public."Deck"
(
    key integer NOT NULL,
    name character(255) NOT NULL,
    description character(255),
    type integer NOT NULL,
    "userCreator" integer NOT NULL,
    CONSTRAINT "Deck_pkey" PRIMARY KEY (key),
    CONSTRAINT fk_type FOREIGN KEY (type)
        REFERENCES public."DeckType" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "fk_userCreator" FOREIGN KEY ("userCreator")
        REFERENCES public."User" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public."Deck"
    OWNER to postgres;

-- Table: public.DeckDiscipline

-- DROP TABLE public."DeckDiscipline";

CREATE TABLE public."DeckDiscipline"
(
    key integer NOT NULL,
    deck integer NOT NULL,
    discipline integer NOT NULL,
    CONSTRAINT "DeckDiscipline_pkey" PRIMARY KEY (key),
    CONSTRAINT fk_Deck FOREIGN KEY (deck)
        REFERENCES public."Deck" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_Discipline FOREIGN KEY (discipline)
        REFERENCES public."Discipline" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public."DeckDiscipline"
    OWNER to postgres;

-- Table: public.Card

-- DROP TABLE public."Card";

CREATE TABLE public."Card"
(
    key integer NOT NULL,
    deck integer NOT NULL,
    question character(255) NOT NULL,
    "questionImage" character(255),
    answer character(255),
    "answerImage" character(255),
    commentary character(255),
    activated integer,
    CONSTRAINT fk_deck PRIMARY KEY (key),
    CONSTRAINT fk_deck_card FOREIGN KEY (deck)
        REFERENCES public."Deck" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public."Card"
    OWNER to postgres;

-- Table: public.UserCardAnswers

-- DROP TABLE public."UserCardAnswers";

CREATE TABLE public."UserCardAnswers"
(
    key integer NOT NULL,
    card integer NOT NULL,
    "user" integer NOT NULL,
    type integer NOT NULL,
    date date NOT NULL,
    CONSTRAINT "UserCardAnswers_pkey" PRIMARY KEY (key),
    CONSTRAINT fk_card_answer FOREIGN KEY (card)
        REFERENCES public."Card" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_type_answer FOREIGN KEY (type)
        REFERENCES public."AnswerType" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT fk_user_answer FOREIGN KEY ("user")
        REFERENCES public."User" (key) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public."UserCardAnswers"
    OWNER to postgres;

----------------------------------------------------------------------------------------------------------

INSERT INTO public."UserType"(
	name)
	VALUES ('Student');
	
INSERT INTO public."UserType"(
	name)
	VALUES ('Professor');

INSERT INTO public."AnswerType"(
	key, name)
	VALUES (1,'easy'),(2,'medium'),(3,'hard');

INSERT INTO public."User"(
    email, name, password, type)
    VALUES ('professor@flashcard.pt',  'Professor', 'professor', 2),
    ('student@flashcard.pt', 'Student', 'student', 1);

INSERT INTO public."Course"(
	key, grade, name)
	VALUES (1, 5, 'Licenciatura Engenharia Informática'),
	(2, 6, 'Mestrado Engenharia Informática'),
	(3, 6, 'Mestrado Gestão de Organizações'),
	(4, 5, 'Licenciatura em Computação Gráfica');

INSERT INTO public."DeckType"(
	key, name)
	VALUES (1, 'Personal'),(2, 'Discipline');

	INSERT INTO public."Discipline"(
    	key, name, course, year)
    	VALUES (1, 'Projeto II', 1, 2021),
    	(2, 'Projeto IV', 1, 2021),
    	(3, 'Análise Matemática', 1, 2020),
    	(4, 'Multimédia', 4, 2020),
    	(5, 'Gestão Organizacional', 3, 2019);

INSERT INTO public."DisciplineUser"(
	key, discipline, "user")
	VALUES (1, 1, 2),
	(2, 2, 2);

INSERT INTO public."Deck"(
	key, name, description, type, "userCreator")
	VALUES (1, 'Derivadas', 'Derivadas Simples', 1, 2),
	(2, 'Integrais', 'Integrais complexos', 2, 1);

INSERT INTO public."DeckDiscipline"(
	key, deck, discipline)
	VALUES (1, 2, 3);

INSERT INTO public."Card"(
	key, deck, question, "questionImage", answer, "answerImage", commentary, activated)
	VALUES (1, 1, 'Questão 1', '', 'Resposta 1', '', '', 1),
	(2, 2, 'Questão 2', '', 'Resposta 2', '', '', 1),
	(3, 2, 'Questão 3', '', 'Resposta 3', '', '', 0);